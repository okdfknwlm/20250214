@model IEnumerable<Net8CoreMVC.Models.EmpModel>

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<p style="margin-top:40px;">
	<button class="btn btn-outline-primary" onclick="CreateBtnOnClick()">員工建檔</button>
</p>
<table id="mytable" class="table table-striped table-bordered" style="width:100%;">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.EmployeeID)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LastName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.FirstName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.TitleOfCourtesy)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BirthDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.HireDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Address)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.City)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Region)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PostalCode)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Country)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.HomePhone)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Extension)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ReportsTo)
			</th>
			<th>功能</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td style="vertical-align: middle;text-align: left;">
					@Html.DisplayFor(modelItem => item.EmployeeID)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FirstName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Title)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.TitleOfCourtesy)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.BirthDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.HireDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Address)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.City)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Region)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PostalCode)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Country)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.HomePhone)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Extension)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ReportsTo)
				</td>
				<td>
					<button class="btn btn-outline-success" onclick="EditBtnOnClick(@item.EmployeeID)">修改</button>
					<button class="btn btn-outline-danger" onclick="DeleteBtnOnClick(@item.EmployeeID)">刪除</button>
				</td>
			</tr>
		}
	</tbody>
</table>
@section Scripts
{
	<script>
		AlertMsg();
		$(document).ready(function () {
			$("#mytable").DataTable(
				{
					processing: true,
					ordering: true,
					searching: true,
					autoWidth: true,
					lengthMenu: [5, 10, 30],
					pageLength: 10,
					order: [[0, 'asc']],
					responsive: true,
					language: {
						url: '@Url.Content("~/json/zh_Hant.json")'
					},
					serverSide: false
				}
			);
		});
		function CreateBtnOnClick() {
			var requestData = { action: "CreateEmp" }
			fetchDataFunction('@Url.Action("CreateEmp", "Employees")', 'POST', requestData, 'HTML')
				.then(response => {
					$("#modal_b").html(response);
					$("#myModalLabel").text("員工建檔");
					$("#myModal").modal('show');
				})
				.catch(error => {
					console.error('Error fetching data:', error);
				});
		}
		function EditBtnOnClick(emp) {
			var requestData = { action: "EditEmp", EmpID: emp }
			fetchDataFunction('@Url.Action("EditEmp", "Employees")', 'GET', requestData, 'HTML')
				.then(response => {
					$("#modal_b").html(response);
					$("#myModalLabel").text("修改員工資料");
					$("#myModal").modal('show');
				})
				.catch(error => {
					console.error('Error fetching data:', error);
				});
		}
		function DeleteBtnOnClick(emp) {
			var requestData = { action: "DeleteEmp", EmpID: emp }
			fetchDataFunction('@Url.Action("DeleteEmp", "Employees")', 'GET', requestData, 'HTML')
				.then(response => {
					$("#modal_b").html(response);
					$("#myModalLabel").text("刪除員工資料");
					$("#myModal").modal('show');
				})
				.catch(error => {
					console.error('Error fetching data:', error);
				});
		}


		function fetchDataFunction(url, method = 'GET', body = null, returnType = 'JSON', headers = {}) {
			// 如果是 GET 請求，則將 body 轉換為查詢字符串
			if (method.toUpperCase() === 'GET' && body) {
				const queryString = new URLSearchParams(body).toString();
				url += `?${queryString}`; // 將查詢字符串附加到 URL
			}

			// 建request參數
			const options = {
				method,
				headers: {
					'Content-Type': 'application/json',
					...headers
				},
				body: (method.toUpperCase() !== 'GET' && body) ? JSON.stringify(body) : null
			};

			// 檢查是否成功並依照傳入returnType決定回傳格式
			const handleResponse = (response) => {
				if (!response.ok) {
					throw new Error(`HTTP error! status: ${response.status}`);
				}
				return returnType.toUpperCase() === "HTML" ? response.text() : response.json();
			};

			return fetch(url, options)
				.then(handleResponse)
				.catch(error => {
					console.error('Fetch error:', error);
					throw error;
				});
		}
		function AlertMsg() {
			var msg = "@Html.Raw(TempData["AlertMsg"])";
			if (msg !== "") {
				alert(msg);
			}
		}
	</script>
}
